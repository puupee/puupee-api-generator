{
  "swagger": "2.0",
  "info": {
    "title": "Puupee API",
    "version": "1.0.0.0"
  },
  "paths": {
    "/api/abp/api-definition": {
      "get": {
        "tags": [
          "AbpApiDefinition"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "IncludeTypes",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplicationApiDescriptionModel"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/abp/application-configuration": {
      "get": {
        "tags": [
          "AbpApplicationConfiguration"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "IncludeLocalizationResources",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplicationConfigurationDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/abp/application-localization": {
      "get": {
        "tags": [
          "AbpApplicationLocalization"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "CultureName",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "OnlyDynamics",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplicationLocalizationDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/abp/multi-tenancy/tenants/by-name/{name}": {
      "get": {
        "tags": [
          "AbpTenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FindTenantResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/abp/multi-tenancy/tenants/by-id/{id}": {
      "get": {
        "tags": [
          "AbpTenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FindTenantResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/register": {
      "post": {
        "tags": [
          "Account"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RegisterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityUserDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/send-password-reset-code": {
      "post": {
        "tags": [
          "Account"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SendPasswordResetCodeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/verify-password-reset-token": {
      "post": {
        "tags": [
          "Account"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VerifyPasswordResetTokenInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/reset-password": {
      "post": {
        "tags": [
          "Account"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ResetPasswordDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/account": {
      "delete": {
        "tags": [
          "Account"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Account"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserProfileDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/api-keys/{id}": {
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ApiKeys"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ApiKeyUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ApiKeys"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/api-keys": {
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ApiKeys"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ApiKeyCreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiKeyDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app": {
      "post": {
        "tags": [
          "App"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "CreatorId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/{id}": {
      "delete": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "env",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "App"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/{id}/with-user": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "env",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppWithUserDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/by-name": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "env",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/sdks-by-id/{appId}": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "env",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppSdkDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/features/{appId}": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "env",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppFeatureDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/upload-credentials": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StorageObjectCredentials"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/public": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Type",
            "type": "string"
          },
          {
            "in": "query",
            "name": "DeveloperAccount",
            "type": "string"
          },
          {
            "in": "query",
            "name": "CurrentAppName",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/with-user": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Type",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SearchKey",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppWithUserDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/by-developer-all": {
      "get": {
        "tags": [
          "App"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "developerAccount",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/run": {
      "post": {
        "tags": [
          "App"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AppRunDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppRunRecordDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app/{id}/run-state": {
      "put": {
        "tags": [
          "App"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AppRunRecordUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppRunRecordDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-feature": {
      "post": {
        "tags": [
          "AppFeature"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppFeatureDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppFeatureDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppFeature"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppFeatureDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-feature/{id}": {
      "delete": {
        "tags": [
          "AppFeature"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppFeature"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppFeatureDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppFeatureDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-pricing": {
      "post": {
        "tags": [
          "AppPricing"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppPricingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppPricingDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppPricing"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppPricingDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-pricing/{id}": {
      "delete": {
        "tags": [
          "AppPricing"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppPricing"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppPricingDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPricing"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppPricingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppPricingDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-pricing/by-app-id/{appId}": {
      "get": {
        "tags": [
          "AppPricing"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppPricingDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-pricing-item": {
      "post": {
        "tags": [
          "AppPricingItem"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppPricingItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppPricingItemDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppPricingItem"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppPricingItemDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-pricing-item/{id}": {
      "delete": {
        "tags": [
          "AppPricingItem"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppPricingItem"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppPricingItemDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppPricingItem"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppPricingItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppPricingItemDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-release": {
      "post": {
        "tags": [
          "AppRelease"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppReleaseDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppReleaseDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppRelease"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "AppId",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "Environment",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Platform",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppReleaseDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-release/{id}": {
      "delete": {
        "tags": [
          "AppRelease"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppRelease"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppReleaseDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppRelease"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppReleaseDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppReleaseDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-release/latest": {
      "get": {
        "tags": [
          "AppRelease"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "AppName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Platform",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ProductType",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Environment",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppReleaseDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-sdk": {
      "post": {
        "tags": [
          "AppSdk"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppSdkDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppSdkDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "AppSdk"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppSdkDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-sdk/{id}": {
      "delete": {
        "tags": [
          "AppSdk"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppSdk"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppSdkDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppSdkDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/app-user-score": {
      "post": {
        "tags": [
          "AppUserScore"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateAppUserScoreDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AppUserScoreDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/avatar": {
      "post": {
        "tags": [
          "Avatar"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateAvatarDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AvatarDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/avatar/credentials": {
      "get": {
        "tags": [
          "Avatar"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StorageObjectCredentials"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/device/{id}": {
      "get": {
        "tags": [
          "Device"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/device/by-token": {
      "get": {
        "tags": [
          "Device"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/device/bind": {
      "post": {
        "tags": [
          "Device"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BindDeviceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/device": {
      "get": {
        "tags": [
          "Device"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeviceDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Device"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/device/refresh": {
      "post": {
        "tags": [
          "Device"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefreshDeviceStatusDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/setting-management/emailing": {
      "get": {
        "tags": [
          "EmailSettings"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EmailSettingsDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmailSettings"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateEmailSettingsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/setting-management/emailing/send-test-email": {
      "post": {
        "tags": [
          "EmailSettings"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SendTestEmailInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/feature-management/features": {
      "get": {
        "tags": [
          "Features"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "providerName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "providerKey",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetFeatureListResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Features"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "providerName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "providerKey",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateFeaturesDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Features"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "providerName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "providerKey",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/bool": {
      "get": {
        "tags": [
          "KeyValue"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BooleanKeyValue"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/date-time": {
      "get": {
        "tags": [
          "KeyValue"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DateTimeKeyValue"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/decimal": {
      "get": {
        "tags": [
          "KeyValue"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DecimalKeyValue"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/double": {
      "get": {
        "tags": [
          "KeyValue"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DoubleKeyValue"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/int": {
      "get": {
        "tags": [
          "KeyValue"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Int32KeyValue"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/string": {
      "get": {
        "tags": [
          "KeyValue"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StringKeyValue"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/set-bool": {
      "post": {
        "tags": [
          "KeyValue"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BooleanSetKeyValueDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/set-date-time": {
      "post": {
        "tags": [
          "KeyValue"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DateTimeSetKeyValueDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/set-decimal": {
      "post": {
        "tags": [
          "KeyValue"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DecimalSetKeyValueDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/set-double": {
      "post": {
        "tags": [
          "KeyValue"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DoubleSetKeyValueDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/set-int": {
      "post": {
        "tags": [
          "KeyValue"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Int32SetKeyValueDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/key-value/set-string": {
      "post": {
        "tags": [
          "KeyValue"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/StringSetKeyValueDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserLoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AbpLoginResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/logout": {
      "get": {
        "tags": [
          "Login"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/check-password": {
      "post": {
        "tags": [
          "Login"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserLoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AbpLoginResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message/publish": {
      "post": {
        "tags": [
          "Message"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MessagePublishDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message/recall": {
      "post": {
        "tags": [
          "Message"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MessageRecallDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message/subscribe": {
      "post": {
        "tags": [
          "Message"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MessageSubscribeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message/unsubscribe": {
      "post": {
        "tags": [
          "Message"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MessageUnsubscribeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source": {
      "post": {
        "tags": [
          "MessageSource"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source/{id}": {
      "delete": {
        "tags": [
          "MessageSource"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "MessageSource"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageSourceDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MessageSource"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source/published-list/{categoryId}": {
      "get": {
        "tags": [
          "MessageSource"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSourceDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source-category": {
      "get": {
        "tags": [
          "MessageSourceCategory"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSourceCategoryDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source-route": {
      "post": {
        "tags": [
          "MessageSourceRoute"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceRouteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source-route/{id}": {
      "delete": {
        "tags": [
          "MessageSourceRoute"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "MessageSourceRoute"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageSourceRouteDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MessageSourceRoute"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceRouteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source-route/published-list/{sourceId}": {
      "get": {
        "tags": [
          "MessageSourceRoute"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSourceRouteDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source-route-sub": {
      "post": {
        "tags": [
          "MessageSourceRouteSub"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceRouteSubDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "MessageSourceRouteSub"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSourceRouteSubDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-source-route-sub/{id}": {
      "delete": {
        "tags": [
          "MessageSourceRouteSub"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "MessageSourceRouteSub"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageSourceRouteSubDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MessageSourceRouteSub"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUpdateMessageSourceRouteSubDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-template": {
      "post": {
        "tags": [
          "MessageTemplate"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateMessageTemplateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageTemplateDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "MessageTemplate"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageTemplateDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-template/{id}": {
      "delete": {
        "tags": [
          "MessageTemplate"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "MessageTemplate"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageTemplateDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "MessageTemplate"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateMessageTemplateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageTemplateDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-template-release": {
      "post": {
        "tags": [
          "MessageTemplateRelease"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateMessageTemplateReleaseDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageTemplateReleaseDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "MessageTemplateRelease"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "templateId",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageTemplateReleaseDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/message-template-release/{id}": {
      "get": {
        "tags": [
          "MessageTemplateRelease"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MessageTemplateReleaseDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/notification/bark/{apiKey}/{message}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "apiKey",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "message",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "automaticallyCopy",
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          {
            "in": "query",
            "name": "copy",
            "type": "string"
          },
          {
            "in": "query",
            "name": "url",
            "type": "string"
          },
          {
            "in": "query",
            "name": "isArchive",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group",
            "type": "string"
          },
          {
            "in": "query",
            "name": "icon",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Value",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NotificationInfoDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/notification/push": {
      "post": {
        "tags": [
          "Notification"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreatePushNotificationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/permission-management/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "providerName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "providerKey",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GetPermissionListResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "providerName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "providerKey",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdatePermissionsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/my-profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProfileDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateProfileDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProfileDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/account/my-profile/change-password": {
      "post": {
        "tags": [
          "Profile"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ChangePasswordInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/puupee/pull": {
      "get": {
        "tags": [
          "Puupee"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "appName",
            "type": "string"
          },
          {
            "in": "query",
            "name": "afterVersion",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "skipCount",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "maxResultCount",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PuupeeDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/puupee/push": {
      "post": {
        "tags": [
          "Puupee"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrUpdatePuupeeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PuupeeDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/puupee/drivers-with-roots": {
      "get": {
        "tags": [
          "Puupee"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PuupeeDto"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/puupee/by-linked-names": {
      "get": {
        "tags": [
          "Puupee"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "names",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PuupeeDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/roles/all": {
      "get": {
        "tags": [
          "Role"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityRoleDtoListResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityRoleDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IdentityRoleCreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityRoleDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/roles/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityRoleDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IdentityRoleUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityRoleDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/simple-data/{id}": {
      "delete": {
        "tags": [
          "SimpleData"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "SimpleData"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimpleDataDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/simple-data": {
      "get": {
        "tags": [
          "SimpleData"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Collection",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimpleDataDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/simple-data/save": {
      "post": {
        "tags": [
          "SimpleData"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SimpleDataDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SimpleDataDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/storage-object/file": {
      "get": {
        "tags": [
          "StorageObject"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/storage-object/thumb": {
      "get": {
        "tags": [
          "StorageObject"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/app/storage-object/file-or-credentials": {
      "get": {
        "tags": [
          "StorageObject"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "rapidCode",
            "type": "string"
          },
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StorageObjectOrCredentialsDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/storage-object/pre-sign-url": {
      "post": {
        "tags": [
          "StorageObject"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/subscription/apple-notifications": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AppleNotificaionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/subscription/order": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateOrGetSubscriptionOrderDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionOrderDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/subscription/verify-receipt": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VerifyReceiptDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VerifyReceiptResult"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/subscription": {
      "get": {
        "tags": [
          "Subscription"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "appId",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscriptionDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/sync-state": {
      "get": {
        "tags": [
          "SyncState"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SyncStateDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/sync-state/puupee-changed-eto": {
      "post": {
        "tags": [
          "SyncState"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PuupeeEto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/sync-state/device-connected-eto": {
      "post": {
        "tags": [
          "SyncState"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PuupeeEto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/multi-tenancy/tenants/{id}": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenant"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TenantUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/multi-tenancy/tenants": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tenant"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TenantCreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/multi-tenancy/tenants/{id}/default-connection-string": {
      "get": {
        "tags": [
          "Tenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "defaultConnectionString",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenant"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/Test/datetime": {
      "get": {
        "tags": [
          "Test"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TestDateTime"
            }
          }
        }
      }
    },
    "/api/identity/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityUserDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IdentityUserUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityUserDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityUserDtoPagedResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IdentityUserCreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityUserDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/{id}/roles": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityRoleDtoListResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IdentityUserUpdateRolesDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/assignable-roles": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityRoleDtoListResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/by-username/{userName}": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityUserDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/by-email/{email}": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityUserDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/{id}": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/by-username/{userName}": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/search": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Sorting",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SkipCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "in": "query",
            "name": "MaxResultCount",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDataListResultDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/identity/users/lookup/count": {
      "get": {
        "tags": [
          "UserLookup"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Filter",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/user-storage": {
      "get": {
        "tags": [
          "UserStorage"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserStorageDto"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    },
    "/api/app/verification/send-code": {
      "post": {
        "tags": [
          "Verification"
        ],
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SendVerificationCodeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "501": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/RemoteServiceErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AbpLoginResult": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/LoginResultType"
        },
        "description": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ActionApiDescriptionModel": {
      "type": "object",
      "properties": {
        "uniqueName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "httpMethod": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "supportedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parametersOnMethod": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MethodParameterApiDescriptionModel"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterApiDescriptionModel"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/ReturnValueApiDescriptionModel"
        },
        "allowAnonymous": {
          "type": "boolean"
        },
        "implementFrom": {
          "type": "string"
        }
      }
    },
    "ApiKeyCreateDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 32,
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "expireAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ApiKeyDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "expireAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ApiKeyDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiKeyDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ApiKeyUpdateDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 32,
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "expireAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AppDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "framework": {
          "type": "string"
        },
        "appType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "homePage": {
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        },
        "gitRepository": {
          "type": "string"
        },
        "gitRepositoryType": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isPublished": {
          "type": "boolean"
        },
        "webhookUrl": {
          "type": "string"
        },
        "businessDomain": {
          "type": "string"
        },
        "businessUrl": {
          "type": "string"
        },
        "subscriptionPlatforms": {
          "type": "string"
        },
        "freePlatforms": {
          "type": "string"
        },
        "specJsonSchema": {
          "type": "string"
        },
        "latestReleases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppReleaseDto"
          }
        },
        "creator": {
          "$ref": "#/definitions/IdentityUserDto"
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppFeatureDto"
          }
        },
        "sdks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppSdkDto"
          }
        }
      }
    },
    "AppDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AppFeatureDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "screenshotKeys": {
          "type": "string"
        }
      }
    },
    "AppFeatureDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppFeatureDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AppPricingDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "naming": {
          "type": "string"
        },
        "monthProductId": {
          "type": "string"
        },
        "yearProductId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "monthPrice": {
          "format": "double",
          "type": "number"
        },
        "monthDiscount": {
          "format": "double",
          "type": "number"
        },
        "monthDiscountPrice": {
          "format": "double",
          "type": "number"
        },
        "monthDiscountStartAt": {
          "format": "date-time",
          "type": "string"
        },
        "monthDiscountEndAt": {
          "format": "date-time",
          "type": "string"
        },
        "yearPrice": {
          "format": "double",
          "type": "number"
        },
        "yearDiscount": {
          "format": "double",
          "type": "number"
        },
        "yearDiscountPrice": {
          "format": "double",
          "type": "number"
        },
        "yearDiscountStartAt": {
          "format": "date-time",
          "type": "string"
        },
        "yearDiscountEndAt": {
          "format": "date-time",
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppPricingItemValueDto"
          }
        }
      }
    },
    "AppPricingDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppPricingDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AppPricingItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "linkUrl": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "isAvailable": {
          "type": "boolean"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AppPricingItemValueDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "isAvailable": {
          "type": "boolean"
        },
        "hasValue": {
          "type": "boolean"
        },
        "intValue": {
          "format": "int32",
          "type": "integer"
        },
        "stringValue": {
          "type": "string"
        },
        "boolValue": {
          "type": "boolean"
        },
        "intValueType": {
          "type": "string"
        }
      }
    },
    "AppReleaseDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "versionName": {
          "type": "string"
        },
        "versionCode": {
          "format": "int64",
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "rapidCode": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "md5": {
          "type": "string"
        },
        "sliceMd5": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "isForceUpdate": {
          "type": "boolean"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "channel": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        }
      }
    },
    "AppReleaseDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppReleaseDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AppRunDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "args": { },
        "envs": { }
      }
    },
    "AppRunRecordDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "args": { },
        "envs": { },
        "status": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "finishAt": {
          "format": "date-time",
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "workerId": {
          "type": "string"
        },
        "workerName": {
          "type": "string"
        }
      }
    },
    "AppRunRecordUpdateDto": {
      "required": [
        "status",
        "workerId",
        "workerName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "finishAt": {
          "format": "date-time",
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "workerId": {
          "type": "string"
        },
        "workerName": {
          "type": "string"
        }
      }
    },
    "AppSdkDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "privacy": {
          "type": "string"
        },
        "privacyUrl": {
          "type": "string"
        },
        "homePage": {
          "type": "string"
        }
      }
    },
    "AppSdkDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppSdkDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AppUserScoreDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "score": {
          "format": "int32",
          "type": "integer"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "AppWithUserDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "framework": {
          "type": "string"
        },
        "appType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "homePage": {
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        },
        "gitRepository": {
          "type": "string"
        },
        "gitRepositoryType": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isPublished": {
          "type": "boolean"
        },
        "webhookUrl": {
          "type": "string"
        },
        "businessDomain": {
          "type": "string"
        },
        "businessUrl": {
          "type": "string"
        },
        "subscriptionPlatforms": {
          "type": "string"
        },
        "freePlatforms": {
          "type": "string"
        },
        "specJsonSchema": {
          "type": "string"
        },
        "latestReleases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppReleaseDto"
          }
        },
        "creator": {
          "$ref": "#/definitions/IdentityUserDto"
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppFeatureDto"
          }
        },
        "sdks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppSdkDto"
          }
        },
        "subscribed": {
          "type": "boolean"
        }
      }
    },
    "AppWithUserDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppWithUserDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "AppleNotificaionDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "signedPayload": {
          "type": "string"
        }
      }
    },
    "AppleVerifyRecceiptStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "AppleVerifyReceiptResult": {
      "type": "object",
      "properties": {
        "environment": {
          "type": "string"
        },
        "is_retryable": {
          "type": "boolean"
        },
        "status": {
          "$ref": "#/definitions/AppleVerifyRecceiptStatus"
        },
        "latest_receipt_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LatestReceiptInfo"
          }
        },
        "latest_receipt": {
          "type": "string"
        },
        "pending_renewal_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PendingRenewalInfo"
          }
        },
        "receipt": {
          "$ref": "#/definitions/Receipt"
        }
      }
    },
    "ApplicationApiDescriptionModel": {
      "type": "object",
      "properties": {
        "modules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ModuleApiDescriptionModel"
          }
        },
        "types": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TypeApiDescriptionModel"
          }
        }
      }
    },
    "ApplicationAuthConfigurationDto": {
      "type": "object",
      "properties": {
        "grantedPolicies": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        }
      }
    },
    "ApplicationConfigurationDto": {
      "type": "object",
      "properties": {
        "localization": {
          "$ref": "#/definitions/ApplicationLocalizationConfigurationDto"
        },
        "auth": {
          "$ref": "#/definitions/ApplicationAuthConfigurationDto"
        },
        "setting": {
          "$ref": "#/definitions/ApplicationSettingConfigurationDto"
        },
        "currentUser": {
          "$ref": "#/definitions/CurrentUserDto"
        },
        "features": {
          "$ref": "#/definitions/ApplicationFeatureConfigurationDto"
        },
        "globalFeatures": {
          "$ref": "#/definitions/ApplicationGlobalFeatureConfigurationDto"
        },
        "multiTenancy": {
          "$ref": "#/definitions/MultiTenancyInfoDto"
        },
        "currentTenant": {
          "$ref": "#/definitions/CurrentTenantDto"
        },
        "timing": {
          "$ref": "#/definitions/TimingDto"
        },
        "clock": {
          "$ref": "#/definitions/ClockDto"
        },
        "objectExtensions": {
          "$ref": "#/definitions/ObjectExtensionsDto"
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": { }
        }
      }
    },
    "ApplicationFeatureConfigurationDto": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationGlobalFeatureConfigurationDto": {
      "type": "object",
      "properties": {
        "enabledFeatures": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationLocalizationConfigurationDto": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ApplicationLocalizationResourceDto"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageInfo"
          }
        },
        "currentCulture": {
          "$ref": "#/definitions/CurrentCultureDto"
        },
        "defaultResourceName": {
          "type": "string"
        },
        "languagesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValue"
            }
          }
        },
        "languageFilesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/NameValue"
            }
          }
        }
      }
    },
    "ApplicationLocalizationDto": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ApplicationLocalizationResourceDto"
          }
        }
      }
    },
    "ApplicationLocalizationResourceDto": {
      "type": "object",
      "properties": {
        "texts": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "baseResources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationSettingConfigurationDto": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AvatarDto": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "BindDeviceDto": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "tpnsToken": {
          "type": "string"
        },
        "isPhysicalDevice": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "systemVersion": {
          "type": "string"
        }
      }
    },
    "BooleanKeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        },
        "expiredAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "BooleanSetKeyValueDto": {
      "type": "object",
      "properties": {
        "value": {
          "type": "boolean"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ChangePasswordInput": {
      "required": [
        "newPassword"
      ],
      "type": "object",
      "properties": {
        "currentPassword": {
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "newPassword": {
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "ClockDto": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "ControllerApiDescriptionModel": {
      "type": "object",
      "properties": {
        "controllerName": {
          "type": "string"
        },
        "controllerGroupName": {
          "type": "string"
        },
        "isRemoteService": {
          "type": "boolean"
        },
        "isIntegrationService": {
          "type": "boolean"
        },
        "apiVersion": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ControllerInterfaceApiDescriptionModel"
          }
        },
        "actions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ActionApiDescriptionModel"
          }
        }
      }
    },
    "ControllerInterfaceApiDescriptionModel": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "methods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InterfaceMethodApiDescriptionModel"
          }
        }
      }
    },
    "CreateAvatarDto": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      }
    },
    "CreateMessageTemplateReleaseDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "templateId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CreateOpenIddictApplicationDto": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayNames": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "postLogoutRedirectUris": {
          "type": "string"
        },
        "properties": {
          "type": "string"
        },
        "redirectUris": {
          "type": "string"
        },
        "requirements": {
          "type": "string"
        },
        "clientUri": {
          "type": "string"
        },
        "logoUri": {
          "type": "string"
        },
        "grantTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateOrGetSubscriptionOrderDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "pricingId": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/SubscriptionOrderType"
        },
        "productId": {
          "type": "string"
        }
      }
    },
    "CreateOrUpdateAppDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "framework": {
          "type": "string"
        },
        "appType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "homePage": {
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        },
        "gitRepository": {
          "type": "string"
        },
        "gitRepositoryType": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "webhookUrl": {
          "type": "string"
        },
        "businessDomain": {
          "type": "string"
        },
        "businessUrl": {
          "type": "string"
        },
        "subscriptionPlatforms": {
          "type": "string"
        },
        "freePlatforms": {
          "type": "string"
        },
        "specJsonSchema": {
          "type": "string"
        },
        "defaultStorageSize": {
          "format": "int64",
          "type": "integer"
        },
        "defaultSingleFileMaxSize": {
          "format": "int64",
          "type": "integer"
        },
        "isPublished": {
          "type": "boolean"
        },
        "openClient": {
          "$ref": "#/definitions/CreateOpenIddictApplicationDto"
        }
      }
    },
    "CreateOrUpdateAppFeatureDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "screenshotKeys": {
          "type": "string"
        }
      }
    },
    "CreateOrUpdateAppPricingDto": {
      "type": "object",
      "properties": {
        "naming": {
          "type": "string"
        },
        "monthProductId": {
          "type": "string"
        },
        "yearProductId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "monthPrice": {
          "format": "double",
          "type": "number"
        },
        "monthDiscount": {
          "format": "double",
          "type": "number"
        },
        "monthDiscountPrice": {
          "format": "double",
          "type": "number"
        },
        "monthDiscountStartAt": {
          "format": "date-time",
          "type": "string"
        },
        "monthDiscountEndAt": {
          "format": "date-time",
          "type": "string"
        },
        "yearPrice": {
          "format": "double",
          "type": "number"
        },
        "yearDiscount": {
          "format": "double",
          "type": "number"
        },
        "yearDiscountPrice": {
          "format": "double",
          "type": "number"
        },
        "yearDiscountStartAt": {
          "format": "date-time",
          "type": "string"
        },
        "yearDiscountEndAt": {
          "format": "date-time",
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppPricingItemValueDto"
          }
        }
      }
    },
    "CreateOrUpdateAppPricingItemDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "linkUrl": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateOrUpdateAppReleaseDto": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "versionName": {
          "type": "string"
        },
        "versionCode": {
          "format": "int64",
          "type": "integer"
        },
        "notes": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "rapidCode": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "md5": {
          "type": "string"
        },
        "sliceMd5": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        },
        "isForceUpdate": {
          "type": "boolean"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "channel": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        }
      }
    },
    "CreateOrUpdateAppSdkDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "privacy": {
          "type": "string"
        },
        "privacyUrl": {
          "type": "string"
        },
        "homePage": {
          "type": "string"
        }
      }
    },
    "CreateOrUpdateAppUserScoreDto": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "score": {
          "format": "int32",
          "type": "integer"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "CreateOrUpdateMessageTemplateDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CreateOrUpdatePuupeeDto": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "md5": {
          "type": "string"
        },
        "sliceMd5": {
          "type": "string"
        },
        "rapidCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "displayStyle": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "storageObjectCreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "storageObjectUpdatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "syncVersion": {
          "format": "int64",
          "type": "integer"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "startAt": {
          "format": "date-time",
          "type": "string"
        },
        "endAt": {
          "format": "date-time",
          "type": "string"
        },
        "notifyAt": {
          "format": "date-time",
          "type": "string"
        },
        "notifyTimingType": {
          "type": "string"
        },
        "notifyTimingUnit": {
          "type": "string"
        },
        "notifyTimingValue": {
          "format": "int32",
          "type": "integer"
        },
        "repeat": {
          "type": "string"
        },
        "repeatOffAt": {
          "format": "date-time",
          "type": "string"
        },
        "repeatOffTimes": {
          "format": "int32",
          "type": "integer"
        },
        "repetitions": {
          "format": "int32",
          "type": "integer"
        },
        "isDone": {
          "type": "boolean"
        },
        "doneAt": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "tagging": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "lastModifierDeviceToken": {
          "type": "string"
        },
        "lastModifierDevice": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "pushToUser": {
          "type": "boolean"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreatePushNotificationDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "puupeeId": {
          "format": "uuid",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "app": {
          "type": "string"
        }
      }
    },
    "CreateUpdateMessageSourceDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isPublished": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateUpdateMessageSourceRouteSubDto"
          }
        }
      }
    },
    "CreateUpdateMessageSourceRouteDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "sourceId": {
          "format": "uuid",
          "type": "string"
        },
        "extra": {
          "type": "string"
        },
        "anticrawler": {
          "type": "boolean"
        },
        "radar": {
          "type": "boolean"
        },
        "rssbud": {
          "type": "boolean"
        },
        "isPublished": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        }
      }
    },
    "CreateUpdateMessageSourceRouteSubDto": {
      "type": "object",
      "properties": {
        "routeId": {
          "format": "uuid",
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "values": { }
      }
    },
    "CurrentCultureDto": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "englishName": {
          "type": "string"
        },
        "threeLetterIsoLanguageName": {
          "type": "string"
        },
        "twoLetterIsoLanguageName": {
          "type": "string"
        },
        "isRightToLeft": {
          "type": "boolean"
        },
        "cultureName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nativeName": {
          "type": "string"
        },
        "dateTimeFormat": {
          "$ref": "#/definitions/DateTimeFormatDto"
        }
      }
    },
    "CurrentTenantDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "CurrentUserDto": {
      "type": "object",
      "properties": {
        "isAuthenticated": {
          "type": "boolean"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "impersonatorUserId": {
          "format": "uuid",
          "type": "string"
        },
        "impersonatorTenantId": {
          "format": "uuid",
          "type": "string"
        },
        "impersonatorUserName": {
          "type": "string"
        },
        "impersonatorTenantName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneNumberVerified": {
          "type": "boolean"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DateTimeFormatDto": {
      "type": "object",
      "properties": {
        "calendarAlgorithmType": {
          "type": "string"
        },
        "dateTimeFormatLong": {
          "type": "string"
        },
        "shortDatePattern": {
          "type": "string"
        },
        "fullDateTimePattern": {
          "type": "string"
        },
        "dateSeparator": {
          "type": "string"
        },
        "shortTimePattern": {
          "type": "string"
        },
        "longTimePattern": {
          "type": "string"
        }
      }
    },
    "DateTimeKeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "date-time",
          "type": "string"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        },
        "expiredAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DateTimeSetKeyValueDto": {
      "type": "object",
      "properties": {
        "value": {
          "format": "date-time",
          "type": "string"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "DecimalKeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        },
        "expiredAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DecimalSetKeyValueDto": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "DeviceDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "tpnsToken": {
          "type": "string"
        },
        "isPhysicalDevice": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "systemVersion": {
          "type": "string"
        }
      }
    },
    "DeviceDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "DoubleKeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        },
        "expiredAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DoubleSetKeyValueDto": {
      "type": "object",
      "properties": {
        "value": {
          "format": "double",
          "type": "number"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "EmailSettingsDto": {
      "type": "object",
      "properties": {
        "smtpHost": {
          "type": "string"
        },
        "smtpPort": {
          "format": "int32",
          "type": "integer"
        },
        "smtpUserName": {
          "type": "string"
        },
        "smtpPassword": {
          "type": "string"
        },
        "smtpDomain": {
          "type": "string"
        },
        "smtpEnableSsl": {
          "type": "boolean"
        },
        "smtpUseDefaultCredentials": {
          "type": "boolean"
        },
        "defaultFromAddress": {
          "type": "string"
        },
        "defaultFromDisplayName": {
          "type": "string"
        }
      }
    },
    "EntityExtensionDto": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExtensionPropertyDto"
          }
        },
        "configuration": {
          "type": "object",
          "additionalProperties": { }
        }
      }
    },
    "ExtensionEnumDto": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionEnumFieldDto"
          }
        },
        "localizationResource": {
          "type": "string"
        }
      }
    },
    "ExtensionEnumFieldDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": { }
      }
    },
    "ExtensionPropertyApiCreateDto": {
      "type": "object",
      "properties": {
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "ExtensionPropertyApiDto": {
      "type": "object",
      "properties": {
        "onGet": {
          "$ref": "#/definitions/ExtensionPropertyApiGetDto"
        },
        "onCreate": {
          "$ref": "#/definitions/ExtensionPropertyApiCreateDto"
        },
        "onUpdate": {
          "$ref": "#/definitions/ExtensionPropertyApiUpdateDto"
        }
      }
    },
    "ExtensionPropertyApiGetDto": {
      "type": "object",
      "properties": {
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "ExtensionPropertyApiUpdateDto": {
      "type": "object",
      "properties": {
        "isAvailable": {
          "type": "boolean"
        }
      }
    },
    "ExtensionPropertyAttributeDto": {
      "type": "object",
      "properties": {
        "typeSimple": {
          "type": "string"
        },
        "config": {
          "type": "object",
          "additionalProperties": { }
        }
      }
    },
    "ExtensionPropertyDto": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "typeSimple": {
          "type": "string"
        },
        "displayName": {
          "$ref": "#/definitions/LocalizableStringDto"
        },
        "api": {
          "$ref": "#/definitions/ExtensionPropertyApiDto"
        },
        "ui": {
          "$ref": "#/definitions/ExtensionPropertyUiDto"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionPropertyAttributeDto"
          }
        },
        "configuration": {
          "type": "object",
          "additionalProperties": { }
        },
        "defaultValue": { }
      }
    },
    "ExtensionPropertyUiDto": {
      "type": "object",
      "properties": {
        "onTable": {
          "$ref": "#/definitions/ExtensionPropertyUiTableDto"
        },
        "onCreateForm": {
          "$ref": "#/definitions/ExtensionPropertyUiFormDto"
        },
        "onEditForm": {
          "$ref": "#/definitions/ExtensionPropertyUiFormDto"
        },
        "lookup": {
          "$ref": "#/definitions/ExtensionPropertyUiLookupDto"
        }
      }
    },
    "ExtensionPropertyUiFormDto": {
      "type": "object",
      "properties": {
        "isVisible": {
          "type": "boolean"
        }
      }
    },
    "ExtensionPropertyUiLookupDto": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "resultListPropertyName": {
          "type": "string"
        },
        "displayPropertyName": {
          "type": "string"
        },
        "valuePropertyName": {
          "type": "string"
        },
        "filterParamName": {
          "type": "string"
        }
      }
    },
    "ExtensionPropertyUiTableDto": {
      "type": "object",
      "properties": {
        "isVisible": {
          "type": "boolean"
        }
      }
    },
    "FeatureDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/FeatureProviderDto"
        },
        "description": {
          "type": "string"
        },
        "valueType": {
          "$ref": "#/definitions/IStringValueType"
        },
        "depth": {
          "format": "int32",
          "type": "integer"
        },
        "parentName": {
          "type": "string"
        }
      }
    },
    "FeatureGroupDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureDto"
          }
        }
      }
    },
    "FeatureProviderDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "FindTenantResultDto": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "GetFeatureListResultDto": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureGroupDto"
          }
        }
      }
    },
    "GetPermissionListResultDto": {
      "type": "object",
      "properties": {
        "entityDisplayName": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionGroupDto"
          }
        }
      }
    },
    "IStringValueType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "validator": {
          "$ref": "#/definitions/IValueValidator"
        }
      }
    },
    "IValueValidator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        }
      }
    },
    "IanaTimeZone": {
      "type": "object",
      "properties": {
        "timeZoneName": {
          "type": "string"
        }
      }
    },
    "IdentityRoleCreateDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "name": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        }
      }
    },
    "IdentityRoleDto": {
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isStatic": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        },
        "concurrencyStamp": {
          "type": "string"
        }
      }
    },
    "IdentityRoleDtoListResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityRoleDto"
          }
        }
      }
    },
    "IdentityRoleDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityRoleDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "IdentityRoleUpdateDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "name": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "boolean"
        },
        "concurrencyStamp": {
          "type": "string"
        }
      }
    },
    "IdentityUser": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "concurrencyStamp": {
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "normalizedUserName": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "normalizedEmail": {
          "type": "string",
          "readOnly": true
        },
        "emailConfirmed": {
          "type": "boolean",
          "readOnly": true
        },
        "passwordHash": {
          "type": "string",
          "readOnly": true
        },
        "securityStamp": {
          "type": "string",
          "readOnly": true
        },
        "isExternal": {
          "type": "boolean"
        },
        "phoneNumber": {
          "type": "string",
          "readOnly": true
        },
        "phoneNumberConfirmed": {
          "type": "boolean",
          "readOnly": true
        },
        "isActive": {
          "type": "boolean",
          "readOnly": true
        },
        "twoFactorEnabled": {
          "type": "boolean",
          "readOnly": true
        },
        "lockoutEnd": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "lockoutEnabled": {
          "type": "boolean",
          "readOnly": true
        },
        "accessFailedCount": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "shouldChangePasswordOnNextLogin": {
          "type": "boolean",
          "readOnly": true
        },
        "entityVersion": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "lastPasswordChangeTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityUserRole"
          },
          "readOnly": true
        },
        "claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityUserClaim"
          },
          "readOnly": true
        },
        "logins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityUserLogin"
          },
          "readOnly": true
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityUserToken"
          },
          "readOnly": true
        },
        "organizationUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityUserOrganizationUnit"
          },
          "readOnly": true
        }
      }
    },
    "IdentityUserClaim": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "claimType": {
          "type": "string",
          "readOnly": true
        },
        "claimValue": {
          "type": "string",
          "readOnly": true
        },
        "userId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "IdentityUserCreateDto": {
      "required": [
        "email",
        "password",
        "userName"
      ],
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "userName": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "name": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "surname": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "phoneNumber": {
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "lockoutEnabled": {
          "type": "boolean"
        },
        "roleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "IdentityUserDto": {
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailConfirmed": {
          "type": "boolean"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneNumberConfirmed": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "lockoutEnabled": {
          "type": "boolean"
        },
        "lockoutEnd": {
          "format": "date-time",
          "type": "string"
        },
        "concurrencyStamp": {
          "type": "string"
        },
        "entityVersion": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "IdentityUserDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityUserDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "IdentityUserLogin": {
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "userId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "loginProvider": {
          "type": "string",
          "readOnly": true
        },
        "providerKey": {
          "type": "string",
          "readOnly": true
        },
        "providerDisplayName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IdentityUserOrganizationUnit": {
      "type": "object",
      "properties": {
        "creationTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "creatorId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "userId": {
          "format": "uuid",
          "type": "string"
        },
        "organizationUnitId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "IdentityUserRole": {
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "userId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "roleId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IdentityUserToken": {
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "userId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "loginProvider": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "string"
        }
      }
    },
    "IdentityUserUpdateDto": {
      "required": [
        "email",
        "userName"
      ],
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "userName": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "name": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "surname": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "email": {
          "format": "email",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "phoneNumber": {
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "lockoutEnabled": {
          "type": "boolean"
        },
        "roleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password": {
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "concurrencyStamp": {
          "type": "string"
        }
      }
    },
    "IdentityUserUpdateRolesDto": {
      "required": [
        "roleNames"
      ],
      "type": "object",
      "properties": {
        "roleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InApp": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "string"
        },
        "product_id": {
          "type": "string"
        },
        "transaction_id": {
          "type": "string"
        },
        "original_transaction_id": {
          "type": "string"
        },
        "purchase_date": {
          "type": "string"
        },
        "purchase_date_ms": {
          "type": "string"
        },
        "purchase_date_pst": {
          "type": "string"
        },
        "original_purchase_date": {
          "type": "string"
        },
        "original_purchase_date_ms": {
          "type": "string"
        },
        "original_purchase_date_pst": {
          "type": "string"
        },
        "expires_date": {
          "type": "string"
        },
        "expires_date_ms": {
          "type": "string"
        },
        "expires_date_pst": {
          "type": "string"
        },
        "web_order_line_item_id": {
          "type": "string"
        },
        "is_trial_period": {
          "type": "string"
        },
        "is_in_intro_offer_period": {
          "type": "string"
        }
      }
    },
    "Int32KeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "type": "integer"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        },
        "expiredAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Int32SetKeyValueDto": {
      "type": "object",
      "properties": {
        "value": {
          "format": "int32",
          "type": "integer"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "InterfaceMethodApiDescriptionModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "parametersOnMethod": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MethodParameterApiDescriptionModel"
          }
        },
        "returnValue": {
          "$ref": "#/definitions/ReturnValueApiDescriptionModel"
        }
      }
    },
    "LanguageInfo": {
      "type": "object",
      "properties": {
        "cultureName": {
          "type": "string"
        },
        "uiCultureName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "twoLetterISOLanguageName": {
          "type": "string",
          "readOnly": true
        },
        "flagIcon": {
          "type": "string"
        }
      }
    },
    "LatestReceiptInfo": {
      "type": "object",
      "properties": {
        "quantity": {
          "type": "string"
        },
        "product_id": {
          "type": "string"
        },
        "transaction_id": {
          "type": "string"
        },
        "original_transaction_id": {
          "type": "string"
        },
        "purchase_date": {
          "type": "string"
        },
        "purchase_date_ms": {
          "type": "string"
        },
        "purchase_date_pst": {
          "type": "string"
        },
        "original_purchase_date": {
          "type": "string"
        },
        "original_purchase_date_ms": {
          "type": "string"
        },
        "original_purchase_date_pst": {
          "type": "string"
        },
        "expires_date": {
          "type": "string"
        },
        "expires_date_ms": {
          "type": "string"
        },
        "expires_date_pst": {
          "type": "string"
        },
        "web_order_line_item_id": {
          "type": "string"
        },
        "is_trial_period": {
          "type": "string"
        },
        "is_in_intro_offer_period": {
          "type": "string"
        }
      }
    },
    "LocalizableStringDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        }
      }
    },
    "LoginResultType": {
      "enum": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ],
      "type": "string"
    },
    "MessagePublishDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": { }
        }
      }
    },
    "MessageRecallDto": {
      "type": "object",
      "properties": {
        "puupeeId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "MessageSourceCategoryDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "MessageSourceDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isPublished": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        },
        "routes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageSourceRouteSubDto"
          }
        }
      }
    },
    "MessageSourceRouteDto": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "sourceId": {
          "format": "uuid",
          "type": "string"
        },
        "extra": {
          "type": "string"
        },
        "anticrawler": {
          "type": "boolean"
        },
        "radar": {
          "type": "boolean"
        },
        "rssbud": {
          "type": "boolean"
        },
        "isPublished": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        }
      }
    },
    "MessageSourceRouteSubDto": {
      "type": "object",
      "properties": {
        "routeId": {
          "format": "uuid",
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "values": { }
      }
    },
    "MessageSubscribeDto": {
      "type": "object",
      "properties": {
        "appId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "MessageTemplateDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "latestVersion": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "MessageTemplateReleaseDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "version": {
          "format": "int32",
          "type": "integer"
        },
        "content": {
          "type": "string"
        },
        "templateId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "MessageUnsubscribeDto": {
      "type": "object",
      "properties": {
        "appId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "MethodParameterApiDescriptionModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "typeAsString": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "typeSimple": {
          "type": "string"
        },
        "isOptional": {
          "type": "boolean"
        },
        "defaultValue": { }
      }
    },
    "ModuleApiDescriptionModel": {
      "type": "object",
      "properties": {
        "rootPath": {
          "type": "string"
        },
        "remoteServiceName": {
          "type": "string"
        },
        "controllers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ControllerApiDescriptionModel"
          }
        }
      }
    },
    "ModuleExtensionDto": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EntityExtensionDto"
          }
        },
        "configuration": {
          "type": "object",
          "additionalProperties": { }
        }
      }
    },
    "MultiTenancyInfoDto": {
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean"
        }
      }
    },
    "NameValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NotificationInfoDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "NotificationInfoDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationInfoDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ObjectExtensionsDto": {
      "type": "object",
      "properties": {
        "modules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ModuleExtensionDto"
          }
        },
        "enums": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExtensionEnumDto"
          }
        }
      }
    },
    "ParameterApiDescriptionModel": {
      "type": "object",
      "properties": {
        "nameOnMethod": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "jsonName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "typeSimple": {
          "type": "string"
        },
        "isOptional": {
          "type": "boolean"
        },
        "defaultValue": { },
        "constraintTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bindingSourceId": {
          "type": "string"
        },
        "descriptorName": {
          "type": "string"
        }
      }
    },
    "PendingRenewalInfo": {
      "type": "object",
      "properties": {
        "auto_renew_product_id": {
          "type": "string"
        },
        "auto_renew_status": {
          "type": "string"
        },
        "is_in_billing_retry_period": {
          "type": "string"
        },
        "original_transaction_id": {
          "type": "string"
        },
        "product_id": {
          "type": "string"
        },
        "expiration_intent": {
          "type": "string"
        },
        "price_consent_status": {
          "type": "string"
        },
        "grace_period_expires_date": {
          "type": "string"
        },
        "grace_period_expires_date_ms": {
          "type": "string"
        },
        "grace_period_expires_date_pst": {
          "type": "string"
        }
      }
    },
    "PermissionGrantInfoDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "parentName": {
          "type": "string"
        },
        "isGranted": {
          "type": "boolean"
        },
        "allowedProviders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grantedProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderInfoDto"
          }
        }
      }
    },
    "PermissionGroupDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayNameKey": {
          "type": "string"
        },
        "displayNameResource": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionGrantInfoDto"
          }
        }
      }
    },
    "ProfileDto": {
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "isExternal": {
          "type": "boolean"
        },
        "hasPassword": {
          "type": "boolean"
        },
        "concurrencyStamp": {
          "type": "string"
        }
      }
    },
    "PropertyApiDescriptionModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "jsonName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "typeSimple": {
          "type": "string"
        },
        "isRequired": {
          "type": "boolean"
        },
        "minLength": {
          "format": "int32",
          "type": "integer"
        },
        "maxLength": {
          "format": "int32",
          "type": "integer"
        },
        "minimum": {
          "type": "string"
        },
        "maximum": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        }
      }
    },
    "ProviderInfoDto": {
      "type": "object",
      "properties": {
        "providerName": {
          "type": "string"
        },
        "providerKey": {
          "type": "string"
        }
      }
    },
    "PuupeeDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PuupeeDto"
          }
        },
        "key": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "md5": {
          "type": "string"
        },
        "sliceMd5": {
          "type": "string"
        },
        "rapidCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "displayStyle": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "storageObjectCreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "storageObjectUpdatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "storageObjectId": {
          "format": "uuid",
          "type": "string"
        },
        "storageObject": {
          "$ref": "#/definitions/StorageObjectDto"
        },
        "thumb": {
          "$ref": "#/definitions/StorageObjectDto"
        },
        "priority": {
          "type": "integer"
        },
        "doneAt": {
          "format": "date-time",
          "type": "string"
        },
        "isDone": {
          "type": "boolean"
        },
        "startAt": {
          "format": "date-time",
          "type": "string"
        },
        "endAt": {
          "format": "date-time",
          "type": "string"
        },
        "notifyAt": {
          "format": "date-time",
          "type": "string"
        },
        "notifyTimingType": {
          "type": "string"
        },
        "notifyTimingUnit": {
          "type": "string"
        },
        "notifyTimingValue": {
          "format": "int32",
          "type": "integer"
        },
        "repeat": {
          "type": "string"
        },
        "repeatOffAt": {
          "format": "date-time",
          "type": "string"
        },
        "repeatOffTimes": {
          "format": "int32",
          "type": "integer"
        },
        "repetitions": {
          "format": "int32",
          "type": "integer"
        },
        "syncVersion": {
          "format": "int64",
          "type": "integer"
        },
        "isHidden": {
          "type": "boolean"
        },
        "tagging": {
          "type": "string"
        },
        "lastModifierDeviceToken": {
          "type": "string"
        },
        "lastModifierDevice": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PuupeeDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PuupeeDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "PuupeeEto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "syncVersion": {
          "format": "int64",
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "parentId": {
          "format": "uuid",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        },
        "tagging": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "md5": {
          "type": "string"
        },
        "sliceMd5": {
          "type": "string"
        },
        "rapidCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "storageObjectCreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "storageObjectUpdatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "displayStyle": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "doneAt": {
          "format": "date-time",
          "type": "string"
        },
        "isDone": {
          "type": "boolean"
        },
        "startAt": {
          "format": "date-time",
          "type": "string"
        },
        "endAt": {
          "format": "date-time",
          "type": "string"
        },
        "notifyAt": {
          "format": "date-time",
          "type": "string"
        },
        "notifyTimingType": {
          "type": "string"
        },
        "notifyTimingUnit": {
          "type": "string"
        },
        "notifyTimingValue": {
          "format": "int32",
          "type": "integer"
        },
        "repeat": {
          "type": "string"
        },
        "repeatOffAt": {
          "format": "date-time",
          "type": "string"
        },
        "repeatOffTimes": {
          "format": "int32",
          "type": "integer"
        },
        "repetitions": {
          "format": "int32",
          "type": "integer"
        },
        "lastModifierDeviceToken": {
          "type": "string"
        },
        "lastModifierDevice": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "sortIndex": {
          "format": "int32",
          "type": "integer"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        }
      }
    },
    "Receipt": {
      "type": "object",
      "properties": {
        "receipt_type": {
          "type": "string"
        },
        "adam_id": {
          "format": "int32",
          "type": "integer"
        },
        "app_item_id": {
          "format": "int32",
          "type": "integer"
        },
        "bundle_id": {
          "type": "string"
        },
        "application_version": {
          "type": "string"
        },
        "download_id": {
          "format": "int32",
          "type": "integer"
        },
        "version_external_identifier": {
          "format": "int32",
          "type": "integer"
        },
        "receipt_creation_date": {
          "type": "string"
        },
        "receipt_creation_date_ms": {
          "type": "string"
        },
        "receipt_creation_date_pst": {
          "type": "string"
        },
        "request_date": {
          "type": "string"
        },
        "request_date_ms": {
          "type": "string"
        },
        "request_date_pst": {
          "type": "string"
        },
        "original_purchase_date": {
          "type": "string"
        },
        "original_purchase_date_ms": {
          "type": "string"
        },
        "original_purchase_date_pst": {
          "type": "string"
        },
        "original_application_version": {
          "type": "string"
        },
        "in_app": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InApp"
          }
        }
      }
    },
    "RefreshDeviceStatusDto": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "RegisterDto": {
      "required": [
        "appName",
        "emailAddress",
        "password",
        "userName"
      ],
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "userName": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "emailAddress": {
          "format": "email",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "password": {
          "format": "password",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "appName": {
          "type": "string"
        }
      }
    },
    "RemoteServiceErrorInfo": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": { }
        },
        "validationErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemoteServiceValidationErrorInfo"
          }
        }
      }
    },
    "RemoteServiceErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/RemoteServiceErrorInfo"
        }
      }
    },
    "RemoteServiceValidationErrorInfo": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResetPasswordDto": {
      "required": [
        "password",
        "resetToken"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "format": "uuid",
          "type": "string"
        },
        "resetToken": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ReturnValueApiDescriptionModel": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "typeSimple": {
          "type": "string"
        }
      }
    },
    "SendPasswordResetCodeDto": {
      "required": [
        "appName",
        "email"
      ],
      "type": "object",
      "properties": {
        "email": {
          "format": "email",
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "returnUrl": {
          "type": "string"
        },
        "returnUrlHash": {
          "type": "string"
        }
      }
    },
    "SendTestEmailInput": {
      "required": [
        "senderEmailAddress",
        "subject",
        "targetEmailAddress"
      ],
      "type": "object",
      "properties": {
        "senderEmailAddress": {
          "type": "string"
        },
        "targetEmailAddress": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "body": {
          "type": "string"
        }
      }
    },
    "SendVerificationCodeDto": {
      "type": "object",
      "properties": {
        "codeSender": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "purpose": {
          "type": "string"
        }
      }
    },
    "SimpleDataDto": {
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "collection": {
          "type": "string"
        }
      }
    },
    "SimpleDataDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SimpleDataDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "StorageObjectCredentials": {
      "type": "object",
      "properties": {
        "storageClass": {
          "type": "string"
        },
        "endPoint": {
          "type": "string"
        },
        "protocal": {
          "type": "string"
        },
        "bucketName": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        },
        "securityToken": {
          "type": "string"
        },
        "accessKeyId": {
          "type": "string"
        },
        "accessKeySecret": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiredTime": {
          "format": "int64",
          "type": "integer"
        },
        "appId": {
          "type": "string"
        }
      }
    },
    "StorageObjectDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "md5": {
          "type": "string"
        },
        "sliceMd5": {
          "type": "string"
        },
        "rapidCode": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "storageObjectCreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "storageObjectUpdatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "syncVersion": {
          "format": "int64",
          "type": "integer"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "StorageObjectOrCredentialsDto": {
      "type": "object",
      "properties": {
        "storageObject": {
          "$ref": "#/definitions/StorageObjectDto"
        },
        "credentials": {
          "$ref": "#/definitions/StorageObjectCredentials"
        }
      }
    },
    "StringKeyValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        },
        "expiredAt": {
          "format": "date-time",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "StringSetKeyValueDto": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "durationSeconds": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SubscriptionDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "expireAt": {
          "format": "date-time",
          "type": "string"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "priceNaming": {
          "type": "string"
        },
        "pricingId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "SubscriptionOrderDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/SubscriptionOrderType"
        },
        "status": {
          "$ref": "#/definitions/SubscriptionOrderStatus"
        },
        "appId": {
          "format": "uuid",
          "type": "string"
        },
        "pricingId": {
          "format": "uuid",
          "type": "string"
        },
        "productId": {
          "type": "string"
        }
      }
    },
    "SubscriptionOrderStatus": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscriptionOrderType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SyncStateDto": {
      "type": "object",
      "properties": {
        "lastSyncAt": {
          "format": "date-time",
          "type": "string"
        },
        "version": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "TenantCreateDto": {
      "required": [
        "adminEmailAddress",
        "adminPassword",
        "name"
      ],
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "name": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "adminEmailAddress": {
          "format": "email",
          "maxLength": 256,
          "type": "string"
        },
        "adminPassword": {
          "maxLength": 128,
          "type": "string"
        }
      }
    },
    "TenantDto": {
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "concurrencyStamp": {
          "type": "string"
        }
      }
    },
    "TenantDtoPagedResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantDto"
          }
        },
        "totalCount": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "TenantUpdateDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "name": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "concurrencyStamp": {
          "type": "string"
        }
      }
    },
    "TestDateTime": {
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "puupee": {
          "$ref": "#/definitions/PuupeeDto"
        }
      }
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "iana": {
          "$ref": "#/definitions/IanaTimeZone"
        },
        "windows": {
          "$ref": "#/definitions/WindowsTimeZone"
        }
      }
    },
    "TimingDto": {
      "type": "object",
      "properties": {
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        }
      }
    },
    "TypeApiDescriptionModel": {
      "type": "object",
      "properties": {
        "baseType": {
          "type": "string"
        },
        "isEnum": {
          "type": "boolean"
        },
        "enumNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enumValues": {
          "type": "array",
          "items": { }
        },
        "genericArguments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyApiDescriptionModel"
          }
        }
      }
    },
    "UpdateEmailSettingsDto": {
      "required": [
        "defaultFromAddress",
        "defaultFromDisplayName"
      ],
      "type": "object",
      "properties": {
        "smtpHost": {
          "maxLength": 256,
          "type": "string"
        },
        "smtpPort": {
          "format": "int32",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "smtpUserName": {
          "maxLength": 1024,
          "type": "string"
        },
        "smtpPassword": {
          "format": "password",
          "maxLength": 1024,
          "type": "string"
        },
        "smtpDomain": {
          "maxLength": 1024,
          "type": "string"
        },
        "smtpEnableSsl": {
          "type": "boolean"
        },
        "smtpUseDefaultCredentials": {
          "type": "boolean"
        },
        "defaultFromAddress": {
          "maxLength": 1024,
          "type": "string"
        },
        "defaultFromDisplayName": {
          "maxLength": 1024,
          "type": "string"
        }
      }
    },
    "UpdateFeatureDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "UpdateFeaturesDto": {
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateFeatureDto"
          }
        }
      }
    },
    "UpdatePermissionDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "isGranted": {
          "type": "boolean"
        }
      }
    },
    "UpdatePermissionsDto": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdatePermissionDto"
          }
        }
      }
    },
    "UpdateProfileDto": {
      "type": "object",
      "properties": {
        "extraProperties": {
          "type": "object",
          "additionalProperties": { },
          "readOnly": true
        },
        "userName": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "email": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "name": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "surname": {
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "phoneNumber": {
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "concurrencyStamp": {
          "type": "string"
        }
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "tenantId": {
          "format": "uuid",
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "emailConfirmed": {
          "type": "boolean"
        },
        "phoneNumber": {
          "type": "string"
        },
        "phoneNumberConfirmed": {
          "type": "boolean"
        }
      }
    },
    "UserDataListResultDto": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserData"
          }
        }
      }
    },
    "UserLoginInfo": {
      "required": [
        "password",
        "userNameOrEmailAddress"
      ],
      "type": "object",
      "properties": {
        "userNameOrEmailAddress": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "password": {
          "format": "password",
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        },
        "rememberMe": {
          "type": "boolean"
        }
      }
    },
    "UserProfileDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "hasPassword": {
          "type": "boolean"
        }
      }
    },
    "UserStorageDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "currentSize": {
          "format": "int64",
          "type": "integer"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer"
        },
        "singleFileMaxSize": {
          "format": "int64",
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserStorageItemDto"
          }
        }
      }
    },
    "UserStorageItemDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "VerifyPasswordResetTokenInput": {
      "required": [
        "resetToken"
      ],
      "type": "object",
      "properties": {
        "userId": {
          "format": "uuid",
          "type": "string"
        },
        "resetToken": {
          "type": "string"
        }
      }
    },
    "VerifyReceiptDto": {
      "required": [
        "deviceToken",
        "orderId",
        "platform",
        "receiptData"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "creationTime": {
          "format": "date-time",
          "type": "string"
        },
        "creatorId": {
          "format": "uuid",
          "type": "string"
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "orderId": {
          "format": "uuid",
          "type": "string"
        },
        "receiptData": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "deviceToken": {
          "type": "string"
        }
      }
    },
    "VerifyReceiptResult": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "creationTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "creatorId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true
        },
        "lastModificationTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifierId": {
          "format": "uuid",
          "type": "string"
        },
        "isDeleted": {
          "type": "boolean"
        },
        "deleterId": {
          "format": "uuid",
          "type": "string"
        },
        "deletionTime": {
          "format": "date-time",
          "type": "string"
        },
        "deleter": {
          "$ref": "#/definitions/IdentityUser"
        },
        "creator": {
          "$ref": "#/definitions/IdentityUser"
        },
        "lastModifier": {
          "$ref": "#/definitions/IdentityUser"
        },
        "orderId": {
          "format": "uuid",
          "type": "string"
        },
        "receiptData": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "deviceToken": {
          "type": "string"
        },
        "ok": {
          "type": "boolean"
        },
        "statusCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "resultData": {
          "type": "string"
        },
        "recordId": {
          "format": "uuid",
          "type": "string"
        },
        "appleVerifyReceiptResult": {
          "$ref": "#/definitions/AppleVerifyReceiptResult"
        }
      }
    },
    "WindowsTimeZone": {
      "type": "object",
      "properties": {
        "timeZoneId": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://localhost:44355/connect/authorize",
      "tokenUrl": "https://localhost:44355/connect/token",
      "scopes": {
        "Puupees": "Puupee API"
      }
    }
  },
  "security": [
    {
      "oauth2": [ ]
    }
  ]
}